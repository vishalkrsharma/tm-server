{"version":3,"sources":["../../../src/modules/auth/auth.gaurd.ts"],"sourcesContent":["import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n"],"names":["AuthGuard","canActivate","context","request","switchToHttp","getRequest","token","extractTokenFromHeader","UnauthorizedException","payload","jwtService","verifyAsync","secret","process","env","JWT_SECRET","type","headers","authorization","split","undefined","constructor"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBALN;qBACoB;;;;;;;;;;AAIpB,IAAA,AAAMA,YAAN,MAAMA;IAGX,MAAMC,YAAYC,OAAyB,EAAoB;QAC7D,MAAMC,UAAUD,QAAQE,YAAY,GAAGC,UAAU;QACjD,MAAMC,QAAQ,IAAI,CAACC,sBAAsB,CAACJ;QAC1C,IAAI,CAACG,OAAO;YACV,MAAM,IAAIE,6BAAqB;QACjC;QACA,IAAI;YACF,MAAMC,UAAU,MAAM,IAAI,CAACC,UAAU,CAACC,WAAW,CAACL,OAAO;gBACvDM,QAAQC,QAAQC,GAAG,CAACC,UAAU;YAChC;YAEAZ,OAAO,CAAC,OAAO,GAAGM;QACpB,EAAE,OAAM;YACN,MAAM,IAAID,6BAAqB;QACjC;QACA,OAAO;IACT;IAEQD,uBAAuBJ,OAAgB,EAAsB;QACnE,MAAM,CAACa,MAAMV,MAAM,GAAGH,QAAQc,OAAO,CAACC,aAAa,EAAEC,MAAM,QAAQ,EAAE;QACrE,OAAOH,SAAS,WAAWV,QAAQc;IACrC;IAvBAC,YAAY,AAAQX,UAAsB,CAAE;aAAxBA,aAAAA;IAAyB;AAwB/C"}