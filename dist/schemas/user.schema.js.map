{"version":3,"sources":["../../src/schemas/user.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { hashPassword } from 'src/common/password';\n\nexport type UserDocument = HydratedDocument<User>;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({\n    unique: true,\n  })\n  username: string;\n\n  @Prop({\n    unique: true,\n  })\n  email: string;\n\n  @Prop()\n  password: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre('save', async function (next) {\n  const user = this as UserDocument;\n\n  if (!user.isModified('password')) {\n    return next();\n  }\n\n  try {\n    user.password = await hashPassword(user.password);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n"],"names":["User","UserSchema","unique","timestamps","SchemaFactory","createForClass","pre","next","user","isModified","password","hashPassword","error"],"mappings":";;;;;;;;;;;IAOaA,IAAI;eAAJA;;IAeAC,UAAU;eAAVA;;;0BAtB+B;0BAEf;;;;;;;;;;AAKtB,IAAA,AAAMD,OAAN,MAAMA;AAab;;;QAXIE,QAAQ;;;;;;QAKRA,QAAQ;;;;;;;;;;QARFC,YAAY;;;AAgBf,MAAMF,aAAaG,uBAAa,CAACC,cAAc,CAACL;AAEvDC,WAAWK,GAAG,CAAC,QAAQ,eAAgBC,IAAI;IACzC,MAAMC,OAAO,IAAI;IAEjB,IAAI,CAACA,KAAKC,UAAU,CAAC,aAAa;QAChC,OAAOF;IACT;IAEA,IAAI;QACFC,KAAKE,QAAQ,GAAG,MAAMC,IAAAA,sBAAY,EAACH,KAAKE,QAAQ;QAChDH;IACF,EAAE,OAAOK,OAAO;QACdL,KAAKK;IACP;AACF"}